import io.qameta.allure.junit4.DisplayName;
import org.junit.Test;
import pom.MainPage;
import pom.RegistrationPage;
import pom.ResetPasswordPage;
import static org.junit.Assert.assertTrue;
import io.qameta.allure.Step;

public class LoginPageOpenTests extends AbstractTests {
    private MainPage mainPage;
    private RegistrationPage registrationPage;

    @Override
    public void setUp() {
        mainPage = new MainPage(driver);
        registrationPage = new RegistrationPage(driver);
    }

    @Test
    @DisplayName("Проверка, что мы перешли на страницу входа")
    public void testLoginFromMainPage() {
        openMainPage();
        clickSignIn();

        assertOnLoginPage();
    }

    @Test
    @DisplayName("Проверка, что мы перешли на страницу входа с личного кабинета")
    public void testLoginFromPersonalPage() {
        openMainPage();
        goToPersonalPage();

        assertOnLoginPage();
    }

    @Test
    @DisplayName("Проверка, что мы перешли на страницу входа с регистрации")
    public void testLoginFromRegistrationPage() {
        openRegistrationPage();
        goToLoginPage();

        assertOnLoginPage();
    }

    @Test
    @DisplayName("Проверка, что мы перешли на страницу входа через восстановление пароля")
    public void testLoginFromResetPasswordPage() {
        openResetPasswordPage();
        clickLogin();

        assertOnLoginPage();
    }

    @Step("Открываю главную страницу")
    private void openMainPage() {
        mainPage.open();
    }

    @Step("Кликаю на кнопку входа")
    private void clickSignIn() {
        mainPage.signInClick();
    }

    @Step("Перехожу на личную страницу")
    private void goToPersonalPage() {
        mainPage.goToPersonalPage();
    }

    @Step("Открываю страницу регистрации")
    private void openRegistrationPage() {
        registrationPage.open();
    }

    @Step("Перехожу на страницу входа из страницы регистрации")
    private void goToLoginPage() {
        registrationPage.goToLoginPage();
    }

    @Step("Открываю страницу сброса пароля")
    private void openResetPasswordPage() {
        resetPasswordPage.open();
    }

    @Step("Кликаю на кнопку входа на странице сброса пароля")
    private void clickLogin() {
        resetPasswordPage.loginClick();
    }

    @Step("Проверяю, что находимся на странице входа")
    private void assertOnLoginPage() {
        assertTrue(driver.getCurrentUrl().contains("/login"));
    }
}
